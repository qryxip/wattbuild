name: CI

on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - master
      - staging
      - trying
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+**'
  pull_request:

jobs:
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup `1.42.0-x86_64-unknown-linux-gnu`
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.42.0-x86_64-unknown-linux-gnu
          default: true
          profile: minimal
          components: rustfmt

      - name: cargo-fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - 1.42.0-x86_64-pc-windows-msvc
          - 1.42.0-x86_64-apple-darwin
          - 1.42.0-x86_64-unknown-linux-gnu
          - stable-x86_64-pc-windows-msvc
          - stable-x86_64-apple-darwin
          - stable-x86_64-unknown-linux-gnu
        python-version:
          - '3.6'
          - '3.9'
        sccache:
          - false
          - true
        include:
          - { toolchain: 1.42.0-x86_64-pc-windows-msvc  , python-version: '3.6', sccache: false, os: windows-2019 }
          - { toolchain: 1.42.0-x86_64-apple-darwin     , python-version: '3.6', sccache: false, os: macos-10.15  }
          - { toolchain: 1.42.0-x86_64-unknown-linux-gnu, python-version: '3.6', sccache: false, os: ubuntu-20.04 }
          - { toolchain: 1.42.0-x86_64-pc-windows-msvc  , python-version: '3.6', sccache: true , os: windows-2019 }
          - { toolchain: 1.42.0-x86_64-apple-darwin     , python-version: '3.6', sccache: true , os: macos-10.15  }
          - { toolchain: 1.42.0-x86_64-unknown-linux-gnu, python-version: '3.6', sccache: true , os: ubuntu-20.04 }
          - { toolchain: 1.42.0-x86_64-pc-windows-msvc  , python-version: '3.9', sccache: false, os: windows-2019 }
          - { toolchain: 1.42.0-x86_64-apple-darwin     , python-version: '3.9', sccache: false, os: macos-10.15  }
          - { toolchain: 1.42.0-x86_64-unknown-linux-gnu, python-version: '3.9', sccache: false, os: ubuntu-20.04 }
          - { toolchain: 1.42.0-x86_64-pc-windows-msvc  , python-version: '3.9', sccache: true , os: windows-2019 }
          - { toolchain: 1.42.0-x86_64-apple-darwin     , python-version: '3.9', sccache: true , os: macos-10.15  }
          - { toolchain: 1.42.0-x86_64-unknown-linux-gnu, python-version: '3.9', sccache: true , os: ubuntu-20.04 }
          - { toolchain: stable-x86_64-pc-windows-msvc  , python-version: '3.6', sccache: false, os: windows-2019 }
          - { toolchain: stable-x86_64-apple-darwin     , python-version: '3.6', sccache: false, os: macos-10.15  }
          - { toolchain: stable-x86_64-unknown-linux-gnu, python-version: '3.6', sccache: false, os: ubuntu-20.04 }
          - { toolchain: stable-x86_64-pc-windows-msvc  , python-version: '3.6', sccache: true , os: windows-2019 }
          - { toolchain: stable-x86_64-apple-darwin     , python-version: '3.6', sccache: true , os: macos-10.15  }
          - { toolchain: stable-x86_64-unknown-linux-gnu, python-version: '3.6', sccache: true , os: ubuntu-20.04 }
          - { toolchain: stable-x86_64-pc-windows-msvc  , python-version: '3.9', sccache: false, os: windows-2019 }
          - { toolchain: stable-x86_64-apple-darwin     , python-version: '3.9', sccache: false, os: macos-10.15  }
          - { toolchain: stable-x86_64-unknown-linux-gnu, python-version: '3.9', sccache: false, os: ubuntu-20.04 }
          - { toolchain: stable-x86_64-pc-windows-msvc  , python-version: '3.9', sccache: true , os: windows-2019 }
          - { toolchain: stable-x86_64-apple-darwin     , python-version: '3.9', sccache: true , os: macos-10.15  }
          - { toolchain: stable-x86_64-unknown-linux-gnu, python-version: '3.9', sccache: true , os: ubuntu-20.04 }

    name: ${{ matrix.toolchain }}, ${{ matrix.python-version }}, ${{ matrix.sccache }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Disable `core.autocrlf`
        run: git config --global core.autocrlf false
        if: matrix.os == 'windows-2019'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up `${{ matrix.toolchain }}`
        id: install-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: wasm32-unknown-unknown
          override: true
          profile: minimal
          components: clippy

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Workaround for https://github.com/actions/cache/issues/403
      - name: Install GNU tar
        run: |
          brew install gnu-tar
          echo "PATH=/usr/local/opt/gnu-tar/libexec/gnubin:$PATH" >> $GITHUB_ENV
        if: matrix.sccache && matrix.os == 'macos-10.15'

      - name: '`.exe` suffix'
        id: exe-suffix
        run: |
          if ${{ contains(matrix.os, 'windows-') }}; then
            echo '::set-output name=suffix::.exe'
          else
            echo '::set-output name=suffix::'
          fi
        shell: bash
        if: matrix.sccache

      - name: Resolve `sccache *`
        id: resolve-sccache
        run: echo "::set-output name=version::$(curl https://crates.io/api/v1/crates/sccache | jq -r '.crate.max_version')"
        shell: bash
        if: matrix.sccache

      - name: Cache for sccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/sccache${{ steps.exe-suffix.outputs.suffix }}
          key: build-installed-crates-${{ matrix.toolchain }}-${{ steps.resolve-sccache.outputs.version }}
        if: matrix.sccache

      - name: cargo-clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-targets -- -D warnings

      - name: cargo-test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --no-fail-fast
        env:
          RUST_BACKTRACE: full
